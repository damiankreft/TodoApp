//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TodoApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TodoItemModel", Namespace="http://schemas.datacontract.org/2004/07/DatabaseServiceLib.Models")]
    [System.SerializableAttribute()]
    public partial class TodoItemModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="ServiceReference1.IDatabase")]
    public interface IDatabase {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IDatabase/Hello", ReplyAction="http://Microsoft.ServiceModel.Samples/IDatabase/HelloResponse")]
        string Hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IDatabase/Hello", ReplyAction="http://Microsoft.ServiceModel.Samples/IDatabase/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IDatabase/Save", ReplyAction="http://Microsoft.ServiceModel.Samples/IDatabase/SaveResponse")]
        bool Save(TodoApp.ServiceReference1.TodoItemModel todoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IDatabase/Save", ReplyAction="http://Microsoft.ServiceModel.Samples/IDatabase/SaveResponse")]
        System.Threading.Tasks.Task<bool> SaveAsync(TodoApp.ServiceReference1.TodoItemModel todoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IDatabase/Delete", ReplyAction="http://Microsoft.ServiceModel.Samples/IDatabase/DeleteResponse")]
        bool Delete(uint itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IDatabase/Delete", ReplyAction="http://Microsoft.ServiceModel.Samples/IDatabase/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(uint itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IDatabase/GetTodoItems", ReplyAction="http://Microsoft.ServiceModel.Samples/IDatabase/GetTodoItemsResponse")]
        TodoApp.ServiceReference1.TodoItemModel[] GetTodoItems(uint userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IDatabase/GetTodoItems", ReplyAction="http://Microsoft.ServiceModel.Samples/IDatabase/GetTodoItemsResponse")]
        System.Threading.Tasks.Task<TodoApp.ServiceReference1.TodoItemModel[]> GetTodoItemsAsync(uint userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseChannel : TodoApp.ServiceReference1.IDatabase, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseClient : System.ServiceModel.ClientBase<TodoApp.ServiceReference1.IDatabase>, TodoApp.ServiceReference1.IDatabase {
        
        public DatabaseClient() {
        }
        
        public DatabaseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Hello() {
            return base.Channel.Hello();
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync() {
            return base.Channel.HelloAsync();
        }
        
        public bool Save(TodoApp.ServiceReference1.TodoItemModel todoItem) {
            return base.Channel.Save(todoItem);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAsync(TodoApp.ServiceReference1.TodoItemModel todoItem) {
            return base.Channel.SaveAsync(todoItem);
        }
        
        public bool Delete(uint itemId) {
            return base.Channel.Delete(itemId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(uint itemId) {
            return base.Channel.DeleteAsync(itemId);
        }
        
        public TodoApp.ServiceReference1.TodoItemModel[] GetTodoItems(uint userId) {
            return base.Channel.GetTodoItems(userId);
        }
        
        public System.Threading.Tasks.Task<TodoApp.ServiceReference1.TodoItemModel[]> GetTodoItemsAsync(uint userId) {
            return base.Channel.GetTodoItemsAsync(userId);
        }
    }
}
